<div class="main-page-wrapper">
  <div class="container-fluid">
    <div class="row content-layout-wrapper">
      <div class="site-content col-sm-12" role="main">
        {% include 'product-page-area' %}
      </div>
    </div>
  </div>
  <div class="clearfix"></div>
  <div class="container related-and-upsells">
    <div class="related products">
      {% if settings.related_product_type == "tags" %}
      {% include 'related-products-by-tags' %}
      {% else %}
      {% include 'related-products' %}
      {% endif %}
    </div>
  </div>
<style type="text/css">
  .template-product .site-content {
    background-color: {{settings.product_background_color}};
    {% if settings.product_background_image != blank %}
    background-image: ({{settings.product_background_image | img_url }});
    background-repeat: {{settings.product_background_image_repeat}}; 
    background-position: {{settings.product_background_position | replace: '_', ' ' }};
    background-attachment: {{settings.product_background_attachment}};
    background-size: {{settings.product_background_size}};
    {% endif %}
  }
</style>
<script>
  Shopify.optionsMap = {};
  Shopify.updateOptionsInSelector = function(selectorIndex) {
    switch (selectorIndex) {
      case 0:
        var key = 'root';
        var selector = jQuery('.single-product-page .single-option-selector:eq(0)');
        break;
      case 1:
        var key = jQuery('.single-product-page .single-option-selector:eq(0)').val();
        var selector = jQuery('.single-product-page .single-option-selector:eq(1)');
        break;
      case 2:
        var key = jQuery('.single-product-page .single-option-selector:eq(0)').val();
        key += ' / ' + jQuery('.single-product-page .single-option-selector:eq(1)').val();
        var selector = jQuery('.single-product-page .single-option-selector:eq(2)');
    }

    var initialValue = selector.val();
    selector.empty();
    var availableOptions = Shopify.optionsMap[key];
    if (availableOptions && availableOptions.length) {
      for (var i = 0; i < availableOptions.length; i++) {
        var option = availableOptions[i];
        var newOption = jQuery('<option></option>').val(option).html(option);
        selector.append(newOption);
      }
      jQuery('.single-product-page .swatch[data-option-index="' + selectorIndex + '"] .swatch-element').each(function() {
        if (jQuery.inArray(jQuery(this).attr('data-value'), availableOptions) !== -1) {
          jQuery(this).removeClass('soldout').show().find(':radio').removeAttr('disabled', 'disabled').removeAttr('checked');
        } else {
          jQuery(this).addClass('soldout').hide().find(':radio').removeAttr('checked').attr('disabled', 'disabled');
        }
      });
      if (jQuery.inArray(initialValue, availableOptions) !== -1) {
        selector.val(initialValue);
      }
      selector.trigger('change');
    }
  };
  Shopify.linkOptionSelectors = function(product) {
    // Building our mapping object.
    for (var i = 0; i < product.variants.length; i++) {
      var variant = product.variants[i];
      //if (variant.available) {
      // Gathering values for the 1st drop-down.
      Shopify.optionsMap['root'] = Shopify.optionsMap['root'] || [];
      Shopify.optionsMap['root'].push(variant.option1);
      Shopify.optionsMap['root'] = Shopify.uniq(Shopify.optionsMap['root']);
      // Gathering values for the 2nd drop-down.
      if (product.options.length > 1) {
        var key = variant.option1;
        Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
        Shopify.optionsMap[key].push(variant.option2);
        Shopify.optionsMap[key] = Shopify.uniq(Shopify.optionsMap[key]);
      }
      // Gathering values for the 3rd drop-down.
      if (product.options.length === 3) {
        var key = variant.option1 + ' / ' + variant.option2;
        Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
        Shopify.optionsMap[key].push(variant.option3);
        Shopify.optionsMap[key] = Shopify.uniq(Shopify.optionsMap[key]);
      }
      //}
    }
    // Update options right away.
    Shopify.updateOptionsInSelector(0);
    if (product.options.length > 1) Shopify.updateOptionsInSelector(1);
    if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
    // When there is an update in the first dropdown.
    jQuery(".single-product-page .single-option-selector:eq(0)").change(function() {
      Shopify.updateOptionsInSelector(1);
      if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
      return true;
    });
    // When there is an update in the second dropdown.
    jQuery(".single-product-page .single-option-selector:eq(1)").change(function() {
      if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
      return true;
    });

  }; 
  productsObj.id{{product.id}} = {{product | json}};
  selectCallback = function(variant, selector) {
    if (variant) {
      if (variant.available) {
        if (variant.compare_at_price > variant.price) { 
          $(".price-box .price").html('<del><span class="shopify-Price-amount amount">' + Shopify.formatMoney(variant.compare_at_price, money_format) + "<span></del>" + ' <ins><span class="shopify-Price-amount amount">' + Shopify.formatMoney(variant.price, money_format) + "</span></ins>")
        } else {
          $(".price-box .price").html('<span class="shopify-Price-amount amount">' + Shopify.formatMoney(variant.price, money_format) + "</span>");
        }
        woodmart_settings.enableCurrency && currenciesCallbackSpecial(".price-box span.money"),
          $(".single-product-page .single_add_to_cart_button").removeClass("disabled").removeAttr("disabled").html(window.inventory_text.add_to_cart), 
          variant.inventory_management && variant.inventory_quantity <= 0 ? ($("#selected-variant").html(selector.product.title + " - " + variant.title), $("#backorder").removeClass("hidden")) : $("#backorder").addClass("hidden");
        if (variant.inventory_management != null) { 
            $(".product-inventory span.in-stock").text(window.inventory_text.in_stock); 
        } else { 
            $(".product-inventory span.in-stock").text(window.inventory_text.many_in_stock); 
        } 
        if(variant.sku != ''){
          $('.sku_wrapper span.sku').text(variant.sku);
        }else{
          $('.sku_wrapper span.sku').text(woodmart_settings.product_data.sku_na);
        }
      }else{
        $("#backorder").addClass("hidden"), $(".single-product-page .single_add_to_cart_button").html(window.inventory_text.sold_out).addClass("disabled").attr("disabled", "disabled");
        $(".product-inventory span.in-stock").text(window.inventory_text.out_of_stock);
        $('.sku_wrapper span.sku').empty();
      }
      if(swatch_color_type == '1' || swatch_color_type == '2'){ 
        var form = $('#' + selector.domIdPrefix).closest('form');
        for (var i=0,length=variant.options.length; i<length; i++) {
          var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
          if (radioButton.size()) { 
            radioButton.get(0).checked = true;
          }
        } 
      }  
    } 
    if (variant && variant.featured_image) {
      var $mains = $('.shopify-product-gallery__wrapper');
      var n = Shopify.Image.removeProtocol(variant.featured_image.src),
          i = $(".shopify-product-gallery__wrapper .shopify-product-gallery__image").filter('[data-zoom="' + n + '"]').parents( ".owl-item" ).index();
      $mains.trigger('to.owl.carousel', i);
    }
    variant && variant.sku ? $("#sku").removeClass("hidden").find("span").html(variant.sku) : $("#sku").addClass("hidden").find("span").html("");
  };
  convertToSlug= function(e) { 
    return e.toLowerCase().replace(/[^a-z0-9 -]/g, "").replace(/\s+/g, "-").replace(/-+/g, "-")
  };
  jQuery(function($) {
    {% if product.available and product.variants.size >= 1 %} 
    var product = {{product | json}}; 
    var layout = $('.single-product-page'); 
    if (product.variants.length >= 1) { //multiple variants
      for (var i = 0; i < product.variants.length; i++) {
        var variant = product.variants[i];
        var option = '<option value="' + variant.id + '">' + variant.title + '</option>'; 
        layout.find('form.product-form > select').append(option);
      }
      new Shopify.OptionSelectors("product-selectors", {
        product: product,
        onVariantSelected: selectCallback, 
        enableHistoryState: true
      });  
      var filePath = asset_url.substring(0, asset_url.lastIndexOf('/'));
      var assetUrl = asset_url.substring(0, asset_url.lastIndexOf('/'));
      var options = ""; 
      for (var i = 0; i < product.options.length; i++) {
        options += '<div class="swatch clearfix" data-option-index="' + i + '">';
        options += '<div class="header">' + product.options[i] + ': </div>'; 
        options += '<div class="swatch-content">';
        var is_color = false;
        var is_circle = 'circle';
        if (/Color|Colour/i.test(product.options[i])) {
          is_color = true;
        }
        if (swatch_color_type == '2') {
          is_color = false;
          is_circle = '';
        } 
        var optionValues = new Array();
        for (var j = 0; j < product.variants.length; j++) {
          var variant = product.variants[j];
          var value = variant.options[i];
          if(variant.featured_image && woodmart_settings.product_data.product_swatch_setting == '2'){ 
            var img = variant.featured_image.src.lastIndexOf("."); 
            var vimg = variant.featured_image.src.slice(0, img) + "_50x50_crop_center" + variant.featured_image.src.slice(img); 
          } 
          var valueHandle = convertToSlug(value);
          var forText = 'swatch-{{product.id}}-' + i + '-' + valueHandle; 
          if (optionValues.indexOf(value) < 0) { 
            options += '<div data-value="' + value + '" class="swatch-element '+is_circle+' '+product_swatch_size+' '+(is_color ? "color" : "")+' ' + (is_color ? "color" : "") + valueHandle + (variant.available ? ' available ' : ' soldout ') + '">';
            if (is_color) {
              options += '<div class="tooltip">' + value + '</div>';
            }
            options += '<input id="' + forText + '" type="radio" name="option-' + i + '" value="' + value + '" ' + (j == 0 ? ' checked ' : '') + (variant.available ? '' : ' disabled') + ' />';
            if (is_color) {
              if(vimg && woodmart_settings.product_data.product_swatch_setting == '2'){ 
                options += '<label for="' + forText + '" class="variant-image"><img src="' + vimg + '" class="variant-image" style="max-width:100%;" /><img class="crossed-out" src="' + assetUrl + 'soldout.png" /></label>';
              }else{
                options += '<label for="' + forText + '" style="background-color: ' + valueHandle + '; background-image: url(' + filePath + valueHandle + '.png)"><img class="crossed-out" src="' + assetUrl + 'soldout.png" /></label>';
              }
            } else {
              options += '<label for="' + forText + '">' + value + '<img class="crossed-out" src="' + assetUrl + 'soldout.png" /></label>';
            }
            options += '</div>';
            if (variant.available) {
              $('.single-product-page .swatch[data-option-index="' + i + '"] .' + valueHandle).removeClass('soldout').addClass('available').find(':radio').removeAttr('disabled');
            }
            optionValues.push(value);
          }
        } 
        options += '</div>';
        options += '</div>';
      }  
      if(swatch_color_type == '1' || swatch_color_type == '2'){ 
        layout.find('form.product-form .product-options > select').after(options);
        layout.find('.swatch :radio').change(function() {
          var optionIndex = $(this).closest('.swatch').attr('data-option-index');
          var optionValue = $(this).val(); 
          $(this)
          .closest('form')
          .find('.single-option-selector')
          .eq(optionIndex)
          .val(optionValue)
          .trigger('change');
        }); 
      } 
      if (product.available) {
        Shopify.optionsMap = {};
        Shopify.linkOptionSelectors(product);
      }
    } else { //single variant
      layout.find('form.product-form .product-options > select').remove();
      var variant_field = '<input type="hidden" name="id" value="' + product.variants[0].id + '">';
      layout.find('form.product-form').append(variant_field);
    }
    {% endif %} 
  });
</script>
<!-- /templates/product.liquid --> 



                <div class="eastsideco_autoSizeGuides"  
                     hidden style="disply:none !important" 
                     data-app="eastsideco_autoSizeGuides"
                     data-shop="{{ shop.permanent_domain }}"
                     data-tags="{{ product.tags | join:',' | escape }}"
                     data-metafields="{{ product.metafields.esc-size-matters.tag }}"
                     data-popup="link"></div>
<!-- IORelatedProduct -->
<div id="io-related-prd-id" style="float: left; clear: both; width: 100%" data-id="{{product.id}}"></div>{{shop.metafields.grrelated_ns.grrelated_key}}
<script>
//Frequently bought together
  window.productCollections = {
    collections: {{ product.collections | json }}
  }
//Frequently bought together
</script>{% include 'wiser_related' %}{% include 'wiser_recommended' %}{% include 'wiser_alsobought' %}{% include 'wiser_recentview' %}{% include 'wiser_topselling' %}{% include 'wiser_trending' %}{% include 'wiser_newarrivals' %}{% include 'wiser_featured' %}{% include 'wiser_recent_related' %}<div id="wc_review_section" class="wc_review_main_content" data-url="{{ shop.url }}" data-handle="{{ product.handle }}" data-limit="0"></div>