{%- layout none -%}
{% assign variant_tmp = product.selected_or_first_available_variant | default: product.variants.first %}

<a href="{{product.url}}" class="view-details-btn"><span {% if settings.language_enable %}data-translate="products.product.view_detail"{% endif %}>{{'products.product.view_detail' | t }}</span></a>
<div class="popup-quick-view">
  <div class="product-quick-view single-product-content"> 
    <div class="row product-image-summary"> 
      <div class="col-md-6 col-sm-6 col-xs-12 product-images shopify-product-gallery">
        <div class="images">
          {% include 'media-quickview' %}
        </div>
        
      </div>
      <div class="col-md-6 col-sm-6 col-xs-12 summary entry-summary">
        <div class="summary-inner woodmart-scroll has-scrollbar"> 
          <div class="woodmart-scroll-content">
            <h1 itemprop="name" class="product_title entry-title"> 
              <a href="{{ product.url | within: collection }}">
                {% if settings.language_enable %}
                <span class="lang1">{{ product.title | split: '|' | first }}</span>
                <span class="lang2">{{ product.title | split: '|' | last }}</span>
                {% else %}
                {{ product.title | split: '|' | first }}
                {% endif %} 
              </a>
            </h1>
            {% if check_admin contains 'productreviews' %}{%- assign pr_review = true -%}{% else %}{%- assign pr_review = false -%}{% endif %}
            {%- if pr_review -%}
            <div class="shopoify-product-rating">
              <div class="star-rating">
                <span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span>
              </div>
            </div>
            {%- endif -%}
            <div class="price-box"> 
              <span class="price">
                {% if variant_tmp.compare_at_price > variant_tmp.price %} 
                <del><span class="shopify-Price-amount amount"><span class="money">{{ product.compare_at_price | money }}</span></span></del> 
                <ins><span class="shopify-Price-amount amount"><span class="money">{{ product.price | money }}</span></span></ins>
                {% else %}
                <span class="shopify-Price-amount amount"><span class="money">{{ product.price | money }}</span></span>
                {% endif %}
              </span>
              <meta itemprop="priceCurrency" content="{{ shop.currency }}" /> 
              {% if product.available %}
              <link itemprop="availability" href="http://schema.org/InStock" />
              {% else %}
              <link itemprop="availability" href="http://schema.org/OutOfStock" />
              {% endif %}
            </div>
            {% if settings.product_availability %}
            <div class="product-inventory">  
              <span {% if settings.language_enable %}data-translate="products.product.availability"{% endif %}>{{ 'products.product.availability' | t }} </span> 
              <span class="in-stock">
                {% if product.selected_or_first_available_variant.inventory_management %}
                {% assign first_inventory = product.selected_or_first_available_variant.inventory_quantity %}
                {% if first_inventory > 0 %}
                {{first_inventory}} {{ 'products.product.in_stock' | t }}
                {% else %}
                {{ 'products.product.out_of_stock' | t }}
                {% endif %}
                {% else %}
                {{ 'products.product.many_in_stock' | t }}
                {% endif %}
              </span>
            </div> 
            {% endif %}

            {% if settings.product_countdown != blank and product.metafields.meta.countdown != blank %}   
            <div class="bottom-product-dailydeal bottom-home-dailydeal">  
              <span class="title" {% if settings.language_enable %}data-translate="products.product.count_down"{% endif %}>{{'products.product.count_down' | t }}</span><div class="product-date" data-date="{{ product.metafields.meta.countdown }}"></div>
            </div> 
            {% endif %} 
            {%- if settings.product_countdown != blank and product.description contains '[countdown]' -%}  
            {%- assign count_down_first = product.description | split:'[/countdown]' | first -%}
            {%- assign count_down_final = count_down_first | split:'[countdown]' | last -%}
            <div class="woodmart-product-countdown woodmart-timer" data-end-date="{{ count_down_final }}" data-timezone="GMT"></div> 
            {%- endif -%}
            {% if settings.product_short_desc %}
            <div class="shopify-product-details__short-description">
              <div class="short-description">
                {%- assign description = product.description -%}  
                {%- if product.description contains '[shortdesc]' and settings.product_short_desc == '1' -%} 
                {%- assign first = description | split:'[/shortdesc]' | first -%} 
                {%- assign description = first | split:'[shortdesc]' | last -%} 
                {%- else -%}
                {%- if product.description contains '[shortdesc]' -%}
                {%- assign description = description | split:'[/shortdesc]' | last -%}  
                {%- endif -%}
                {%- if product.description contains '[additional]' -%}
                {%- assign description = description | split:'[/additional]' | last -%}  
                {%- endif -%}
                {%- if settings.product_short_desc == '1' -%}  
                {%- assign description = description | strip_html | truncatewords: 30 -%}
                {%- endif -%}
                {%- endif -%}  
                {%- if settings.language_enable -%}
                <div class="lang1">{{ description | split: '[lang2]' | first }}</div>
                <div class="lang2">{{ description | split: '[lang2]' | last }}</div>
                {%- else -%}
                {{ description | split: '[lang2]' | first }}
                {%- endif -%}  
              </div>
            </div> 
            {% endif %} 
            <div class="product-type-main">  
              <form class="product-form" id="product-form" action="/cart/add" method="post" enctype="multipart/form-data" data-product-id="{{product.id}}" data-id="{{ product.handle }}"> 
                <div id="product-variants" class="product-options" {% if product.options.size == 1 and product.options.first == 'Title' %}style="display: none;"{% endif %}> 
                  <select id="product-selectors" name="id" style="display: none;">
                    {% for variant in product.variants %}
                    {% if variant.available %}
                    <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>
                    {% else %}
                    <option disabled="disabled">
                      {{ variant.title }} - {{'products.product.sold_out' | t}}
                    </option>
                    {% endif %}
                    {% endfor %}
                  </select> 
                </div>
                {%- if settings.catalog_mode_enable == blank -%}
                <div class="single_variation_wrap">
                  <div class="shopify-variation-add-to-cart variations_button shopify-variation-add-to-cart-disabled">
                    <div class="quantity">
                      <input type="button" value="-" class="minus" onclick="var result = document.getElementById('qty'); var qty = result.value; if( !isNaN( qty ) &amp;&amp; qty > 1 ) result.value--;return false;">
                      <input type="number" id="qty" name="quantity" value="1" min="1" class="input-text qty text" size="4"> 
                      <input type="button" value="+" class="plus" onclick="var result = document.getElementById('qty'); var qty = result.value; if( !isNaN( qty )) result.value++;return false;">
                    </div>
                    {% if product.available %}
                    <button type="submit" name="add" class="single_add_to_cart_button button">  
                      <span {% if settings.language_enable %}data-translate="products.product.add_to_cart"{% endif %}>{{ 'products.product.add_to_cart' | t }}</span>
                    </button> 
                    {% else %} 
                    <button href="javascript:;" class="button" disabled>
                      <span>
                        <span {% if settings.language_enable %}data-translate="products.product.sold_out"{% endif %}>{{ 'products.product.sold_out' | t }}</span>
                      </span>
                    </button> 
                    {% endif %}
                    
                    {% if settings.collection_wishlist_dis == blank %}
                    <div class="wrap-wishlist-button">
                      <a href="javascript:;" data-product-handle="{{product.handle}}" data-product-title="{{product.title}}" class="add_to_wishlist" title="{{'wish_list.general.add_to_wishlist' | t}}"><span {% if settings.language_enable %}data-translate="wish_list.general.add_to_wishlist"{% endif %}>{{ 'wish_list.general.add_to_wishlist' | t }}</span></a>
                      <div class="clear"></div>
                    </div>
                    {% endif %}
                    
                  </div>
                </div>
                {%- endif -%}
              </form>   
            </div> 
            <div class="product_meta"> 
              {%- if settings.product_sku -%}
                  {%- assign current_variant = product.selected_or_first_available_variant -%}
                  <span class="sku_wrapper"><b {% if settings.language_enable %}data-translate="products.product.sku"{% endif %}>{{ 'products.product.sku' | t }} </b><span class="sku">{% if current_variant.sku != blank %}{{ current_variant.sku }}{% else %}{{ 'products.product.sku_na' | t }}{% endif %}</span></span>
                {%- endif -%} 
              {%- if settings.product_category -%}
                  <span class="posted_in"><label {%- if settings.language_enable -%}data-translate="products.product.product_category"{%- endif -%}>{{ 'products.product.product_category' | t }} </label> 
                    {%- for collection in product.collections limit:10 -%}
                    {{ collection.title | link_to: collection.url }}{%- if forloop.last == false -%},{%- endif -%}
                    {%- endfor -%}
                  </span>
                {%- endif -%}
            </div> 
          </div>
          <div class="woodmart-scroll-pane"><div class="woodmart-scroll-slider"></div></div>
        </div>
      </div>
    </div>  
  </div>
</div>
<script>
  Shopify.quickviewOptionsMap = {};
  Shopify.quickviewUpdateOptionsInSelector = function(selectorIndex) {
    switch (selectorIndex) {
      case 0:
        var key = 'root';
        var selector = jQuery('.product-quick-view .single-option-selector:eq(0)');
        break;
      case 1:
        var key = jQuery('.product-quick-view .single-option-selector:eq(0)').val();
        var selector = jQuery('.product-quick-view .single-option-selector:eq(1)');
        break;
      case 2:
        var key = jQuery('.product-quick-view .single-option-selector:eq(0)').val();
        key += ' / ' + jQuery('.product-quick-view .single-option-selector:eq(1)').val();
        var selector = jQuery('.product-quick-view .single-option-selector:eq(2)');
    }
    var initialValue = selector.val();
    selector.empty();
    var availableOptions = Shopify.quickviewOptionsMap[key];
    if (availableOptions && availableOptions.length) {
      for (var i = 0; i < availableOptions.length; i++) {
        var option = availableOptions[i];
        var newOption = jQuery('<option></option>').val(option).html(option);
        selector.append(newOption);
      }
      jQuery('.product-quick-view .swatch[data-option-index="' + selectorIndex + '"] .swatch-element').each(function() {
        if (jQuery.inArray(jQuery(this).attr('data-value'), availableOptions) !== -1) {
          jQuery(this).removeClass('soldout').show().find(':radio').removeAttr('disabled', 'disabled').removeAttr('checked');
        } else {
          jQuery(this).addClass('soldout').hide().find(':radio').removeAttr('checked').attr('disabled', 'disabled');
        }
      });
      if (jQuery.inArray(initialValue, availableOptions) !== -1) {
        selector.val(initialValue);
      }
      selector.trigger('change');
    }
  };
  Shopify.quickviewLinkOptionSelectors = function(product) {
    // Building our mapping object.
    for (var i = 0; i < product.variants.length; i++) {
      var variant = product.variants[i];
      //if (variant.available) {
      // Gathering values for the 1st drop-down.
      Shopify.quickviewOptionsMap['root'] = Shopify.quickviewOptionsMap['root'] || [];
      Shopify.quickviewOptionsMap['root'].push(variant.option1);
      Shopify.quickviewOptionsMap['root'] = Shopify.uniq(Shopify.quickviewOptionsMap['root']);
      // Gathering values for the 2nd drop-down.
      if (product.options.length > 1) {
        var key = variant.option1;
        Shopify.quickviewOptionsMap[key] = Shopify.quickviewOptionsMap[key] || [];
        Shopify.quickviewOptionsMap[key].push(variant.option2);
        Shopify.quickviewOptionsMap[key] = Shopify.uniq(Shopify.quickviewOptionsMap[key]);
      }
      // Gathering values for the 3rd drop-down.
      if (product.options.length === 3) {
        var key = variant.option1 + ' / ' + variant.option2;
        Shopify.quickviewOptionsMap[key] = Shopify.quickviewOptionsMap[key] || [];
        Shopify.quickviewOptionsMap[key].push(variant.option3);
        Shopify.quickviewOptionsMap[key] = Shopify.uniq(Shopify.quickviewOptionsMap[key]);
      }
      //}
    }
    // Update options right away.
    Shopify.quickviewUpdateOptionsInSelector(0);
    if (product.options.length > 1) Shopify.quickviewUpdateOptionsInSelector(1);
    if (product.options.length === 3) Shopify.quickviewUpdateOptionsInSelector(2);
    // When there is an update in the first dropdown.
    jQuery(".product-quick-view .single-option-selector:eq(0)").change(function() {
      Shopify.quickviewUpdateOptionsInSelector(1);
      if (product.options.length === 3) Shopify.quickviewUpdateOptionsInSelector(2);
      return true;
    });
    // When there is an update in the second dropdown.
    jQuery(".product-quick-view .single-option-selector:eq(1)").change(function() {
      if (product.options.length === 3) Shopify.quickviewUpdateOptionsInSelector(2);
      return true;
    });

  }; 
  productsObj.id{{product.id}} = {{product | json}};
  selectCallback = function(variant, selector) {
    if (variant) {
      if (variant.available) {
        if (variant.compare_at_price > variant.price) { 
          $(".price-box .price").html('<del><span class="shopify-Price-amount amount">' + Shopify.formatMoney(variant.compare_at_price, money_format) + "<span></del>" + ' <ins><span class="shopify-Price-amount amount">' + Shopify.formatMoney(variant.price, money_format) + "</span></ins>")
        } else {
          $(".price-box .price").html('<span class="shopify-Price-amount amount">' + Shopify.formatMoney(variant.price, money_format) + "</span>");
        }
        woodmart_settings.enableCurrency && currenciesCallbackSpecial(".price-box span.money"),
          $(".add-to-cart").removeClass("disabled").removeAttr("disabled").html(window.inventory_text.add_to_cart), 
          variant.inventory_management && variant.inventory_quantity <= 0 ? ($("#selected-variant").html(selector.product.title + " - " + variant.title), $("#backorder").removeClass("hidden")) : $("#backorder").addClass("hidden");
        if (variant.inventory_management!=null) {
          $(".product-inventory span.in-stock").text(variant.inventory_quantity + " " + window.inventory_text.in_stock);
        } else {
          $(".product-inventory span.in-stock").text(window.inventory_text.many_in_stock);
        } 
        if(variant.sku != ''){
          $('.sku_wrapper span.sku').text(variant.sku);
        }else{
          $('.sku_wrapper span.sku').text(woodmart_settings.product_data.sku_na);
        }
      }else{
        $("#backorder").addClass("hidden"), $(".product-quick-view .add-to-cart").html(window.inventory_text.sold_out).addClass("disabled").attr("disabled", "disabled");
        $(".product-inventory span.in-stock").text(window.inventory_text.out_of_stock);
        $('.sku_wrapper span.sku').empty();
      }
      if(swatch_color_type == '1' || swatch_color_type == '2'){ 
        var form = $('#' + selector.domIdPrefix).closest('form');
        for (var i=0,length=variant.options.length; i<length; i++) {
          var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
          if (radioButton.size()) { 
            radioButton.get(0).checked = true;
          }
        } 
      }  
    } 
    if (variant && variant.featured_image) {
      var $mains = $('.shopify-product-gallery__wrapper');
      var n = Shopify.Image.removeProtocol(variant.featured_image.src),
          i = $(".shopify-product-gallery__wrapper .shopify-product-gallery__image").filter('[data-zoom="' + n + '"]').parents( ".owl-item" ).index();
      $mains.trigger('to.owl.carousel', i);
    }
    variant && variant.sku ? $("#sku").removeClass("hidden").find("span").html(variant.sku) : $("#sku").addClass("hidden").find("span").html("");
  };
  convertToSlug= function(e) { 
    return e.toLowerCase().replace(/[^a-z0-9 -]/g, "").replace(/\s+/g, "-").replace(/-+/g, "-")
  };
  jQuery(function($) {
    {% if product.available and product.variants.size >= 1 %} 
    var product = {{product | json}};
    var layout = $('.product-quick-view'); 
    if (product.variants.length >= 1) { //multiple variants
      for (var i = 0; i < product.variants.length; i++) {
        var variant = product.variants[i];
        var option = '<option value="' + variant.id + '">' + variant.title + '</option>'; 
        layout.find('form.product-form > select').append(option);
      }
      new Shopify.OptionSelectors("product-selectors", {
        product: product,
        onVariantSelected: selectCallback, 
        enableHistoryState: true
      });

      //start of quickview variant;
      var filePath = asset_url.substring(0, asset_url.lastIndexOf('/'));
      var assetUrl = asset_url.substring(0, asset_url.lastIndexOf('/'));
      var options = ""; 
      for (var i = 0; i < product.options.length; i++) {
        options += '<div class="swatch clearfix" data-option-index="' + i + '">';
        options += '<div class="header">' + product.options[i] + ': </div>'; 
        options += '<div class="swatch-content">';
        var is_color = false;
        var is_circle = 'circle';
        if (/Color|Colour/i.test(product.options[i])) {
          is_color = true;
        }
        if (swatch_color_type == '2') {
          is_color = false;
          is_circle = '';
        } 
        var optionValues = new Array();
        for (var j = 0; j < product.variants.length; j++) {
          var variant = product.variants[j];
          var value = variant.options[i];
          if(variant.featured_image && woodmart_settings.product_data.product_swatch_setting == '2'){ 
            var img = variant.featured_image.src.lastIndexOf("."); 
            var vimg = variant.featured_image.src.slice(0, img) + "_50x50_crop_center" + variant.featured_image.src.slice(img); 
          } 
          var valueHandle = convertToSlug(value);
          var forText = 'swatch-{{product.id}}-' + i + '-' + valueHandle; 
          if (optionValues.indexOf(value) < 0) {
            //not yet inserted
            options += '<div data-value="' + value + '" class="swatch-element '+is_circle+' '+product_swatch_size+' '+(is_color ? "color" : "")+' ' + (is_color ? "color" : "") + valueHandle + (variant.available ? ' available ' : ' soldout ') + '">';

            if (is_color) {
              options += '<div class="tooltip">' + value + '</div>';
            }
            options += '<input id="' + forText + '" type="radio" name="option-' + i + '" value="' + value + '" ' + (j == 0 ? ' checked ' : '') + (variant.available ? '' : ' disabled') + ' />';

            if (is_color) {
              if(vimg && woodmart_settings.product_data.product_swatch_setting == '2'){ 
                options += '<label for="' + forText + '" class="variant-image"><img src="' + vimg + '" class="variant-image" style="max-width:100%;" /><img class="crossed-out" src="' + assetUrl + 'soldout.png" /></label>';
              }else{
                options += '<label for="' + forText + '" style="background-color: ' + valueHandle + '; background-image: url(' + filePath + valueHandle + '.png)"><img class="crossed-out" src="' + assetUrl + 'soldout.png" /></label>';
              }
            } else {
              options += '<label for="' + forText + '">' + value + '<img class="crossed-out" src="' + assetUrl + 'soldout.png" /></label>';
            }
            options += '</div>';
            if (variant.available) {
              $('.product-quick-view .swatch[data-option-index="' + i + '"] .' + valueHandle).removeClass('soldout').addClass('available').find(':radio').removeAttr('disabled');
            }
            optionValues.push(value);
          }
        } 
        options += '</div>';
        options += '</div>';
      }  
      if(swatch_color_type == '1' || swatch_color_type == '2'){ 
        layout.find('form.product-form .product-options > select').after(options);
        layout.find('.swatch :radio').change(function() {
          var optionIndex = $(this).closest('.swatch').attr('data-option-index');
          var optionValue = $(this).val(); 
          $(this)
          .closest('form')
          .find('.single-option-selector')
          .eq(optionIndex)
          .val(optionValue)
          .trigger('change');
        }); 
      }
      if (product.available) {
        Shopify.quickviewOptionsMap = {};
        Shopify.quickviewLinkOptionSelectors(product);
      }
      //end of quickview variant
    } else { //single variant
      layout.find('form.product-form .product-options > select').remove();
      var variant_field = '<input type="hidden" name="id" value="' + product.variants[0].id + '">';
      layout.find('form.product-form').append(variant_field);
    }
    {% endif %} 
  });
</script>
